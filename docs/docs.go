// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/genomes": {
            "get": {
                "description": "Get all genomes",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "genomes"
                ],
                "summary": "List genomes",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Genome"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new genome record",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "genomes"
                ],
                "summary": "Create genome",
                "parameters": [
                    {
                        "description": "Genome info",
                        "name": "genome",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Genome"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Genome"
                        }
                    }
                }
            }
        },
        "/api/genomes/{id}": {
            "get": {
                "description": "Get genome by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "genomes"
                ],
                "summary": "Get genome",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Genome ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Genome"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "Update genome by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "genomes"
                ],
                "summary": "Update genome",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Genome ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Genome info",
                        "name": "genome",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Genome"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Genome"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete genome by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "genomes"
                ],
                "summary": "Delete genome",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Genome ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/samples": {
            "get": {
                "description": "Get all samples",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "samples"
                ],
                "summary": "List samples",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Sample"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new sample record",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "samples"
                ],
                "summary": "Create sample",
                "parameters": [
                    {
                        "description": "Sample info",
                        "name": "sample",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Sample"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Sample"
                        }
                    }
                }
            }
        },
        "/api/samples/{id}": {
            "get": {
                "description": "Get sample by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "samples"
                ],
                "summary": "Get sample",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Sample ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Sample"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "Update sample by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "samples"
                ],
                "summary": "Update sample",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Sample ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Sample info",
                        "name": "sample",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Sample"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Sample"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete sample by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "samples"
                ],
                "summary": "Delete sample",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Sample ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/samples/{id}/variants": {
            "get": {
                "description": "Get all variant files for a sample",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "variants"
                ],
                "summary": "Get sample variants",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Sample ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.VariantFile"
                            }
                        }
                    }
                }
            }
        },
        "/api/sequence": {
            "get": {
                "description": "Get all sequence files",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sequence"
                ],
                "summary": "List sequence files",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.SequenceFile"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new sequence file record",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sequence"
                ],
                "summary": "Create sequence file",
                "parameters": [
                    {
                        "description": "Sequence file info",
                        "name": "sequence_file",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SequenceFile"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.SequenceFile"
                        }
                    }
                }
            }
        },
        "/api/sequence/{id}": {
            "get": {
                "description": "Get sequence file by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sequence"
                ],
                "summary": "Get sequence file",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Sequence file ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.SequenceFile"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "Update sequence file by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sequence"
                ],
                "summary": "Update sequence file",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Sequence file ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Sequence file info",
                        "name": "sequence_file",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SequenceFile"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.SequenceFile"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete sequence file by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sequence"
                ],
                "summary": "Delete sequence file",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Sequence file ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/users": {
            "get": {
                "description": "Get all users",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "List users",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.User"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Create user",
                "parameters": [
                    {
                        "description": "User info",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    }
                }
            }
        },
        "/api/users/{id}": {
            "get": {
                "description": "Get user by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "Update user by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Update user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "User info",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete user by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Delete user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/variants": {
            "get": {
                "description": "Get all variant files",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "variants"
                ],
                "summary": "List variant files",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.VariantFile"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new variant file record",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "variants"
                ],
                "summary": "Create variant file",
                "parameters": [
                    {
                        "description": "Variant file info",
                        "name": "variant_file",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.VariantFile"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.VariantFile"
                        }
                    }
                }
            }
        },
        "/api/variants/{id}": {
            "delete": {
                "description": "Delete variant file by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "variants"
                ],
                "summary": "Delete variant file",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Variant file ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Genome": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "reference_version": {
                    "type": "string"
                },
                "species": {
                    "type": "string"
                }
            }
        },
        "models.Sample": {
            "type": "object",
            "properties": {
                "collected_by": {
                    "type": "integer"
                },
                "collection_date": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "donor_id": {
                    "type": "string"
                },
                "genome_id": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "metadata": {
                    "description": "JSON as raw string or use map[string]interface{}",
                    "type": "string"
                },
                "sample_type": {
                    "type": "string"
                }
            }
        },
        "models.SequenceFile": {
            "type": "object",
            "properties": {
                "checksum": {
                    "type": "string"
                },
                "file_path": {
                    "type": "string"
                },
                "file_type": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "sample_id": {
                    "type": "integer"
                },
                "uploaded_at": {
                    "type": "string"
                },
                "uploaded_by": {
                    "type": "integer"
                }
            }
        },
        "models.User": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "role": {
                    "description": "admin, researcher, guest, lab_technician",
                    "type": "string"
                }
            }
        },
        "models.VariantFile": {
            "type": "object",
            "properties": {
                "checksum": {
                    "type": "string"
                },
                "file_path": {
                    "type": "string"
                },
                "file_type": {
                    "type": "string"
                },
                "genome_id": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "sample_id": {
                    "type": "integer"
                },
                "uploaded_at": {
                    "type": "string"
                },
                "uploaded_by": {
                    "type": "integer"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
